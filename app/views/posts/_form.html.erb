<!-- ポスト投稿フォーム（TextPost投稿フォームとDocumentPost投稿フォームをタブ切り替え） -->
<div role="tablist" class="tabs tabs-box">
  
  <!-- TextPost タブ -->
  <input type="radio" 
          name="post_type" 
          role="tab" 
          class="tab text-custom-dark-green"
          aria-label="テキスト" 
          <%= 'checked' if post.postable_type.blank? || post.postable_type == 'TextPost' %> />
  <div role="tabpanel" class="tab-content bg-custom-white border-custom-light-gray/50 rounded-box p-6">
    <!-- TextPost エラーメッセージ -->
    <% if post.postable_type.blank? || post.postable_type == 'TextPost' %>
      <%= render 'posts/post_error_messages', post: post %>
    <% end %>
    
    <!-- TextPost フォーム -->
    <%= form_with model: post, url: task_posts_path(task), method: :post, class: "space-y-4", id: "text-post-form" do |f| %>
      <%= f.hidden_field :postable_type, value: "TextPost" %>
      
      <div class="form-control">
        <%= f.fields_for :postable_attributes, (post.postable.is_a?(TextPost) ? post.postable : TextPost.new) do |text_post_form| %>
          <%= text_post_form.text_area :body, 
              placeholder: "コメントを入力してください...", 
              class: "textarea textarea-bordered w-full h-24 bg-custom-white border-custom-dark-green text-custom-dark-green focus:border-custom-dark-green focus:ring-2 focus:ring-custom-dark-green/20 focus:outline-none placeholder:text-custom-dark-green/50" %>
        <% end %>
      </div>
      <div class="flex justify-end gap-4">
        <%= f.submit "投稿", class: "btn btn-primary" %>
      </div>
    <% end %>
  </div>

  <!-- DocumentPost タブ -->
  <input type="radio" 
          name="post_type" 
          role="tab" 
          class="tab text-custom-dark-green"
          aria-label="ドキュメント" 
          <%= 'checked' if post.postable_type == 'DocumentPost' %> />
  <div role="tabpanel" class="tab-content bg-custom-white border-custom-light-gray/50 rounded-box p-6">
    <!-- DocumentPost エラーメッセージ -->
    <% if post.postable_type == 'DocumentPost' %>
      <%= render 'posts/post_error_messages', post: post %>
    <% end %>
    
    <!-- DocumentPost フォーム -->
    <%= form_with model: post, url: task_posts_path(task), method: :post, class: "space-y-4", id: "document-post-form" do |f| %>
      <%= f.hidden_field :postable_type, value: "DocumentPost" %>
      
      <div class="form-control">
        <%= f.fields_for :postable_attributes, (post.postable.is_a?(DocumentPost) ? post.postable.document : Document.new) do |document_post_form| %>
          <%= document_post_form.label :url, "URL", class: "label text-custom-dark-green" %>
          <%= document_post_form.text_field :url, 
              placeholder: "https://docs.example.com", 
              class: "input input-bordered w-full bg-custom-white border-custom-dark-green text-custom-dark-green focus:border-custom-dark-green focus:ring-2 focus:ring-custom-dark-green/20 focus:outline-none placeholder:text-custom-dark-green/50" %>
        <% end %>
      </div>
      <div class="flex justify-end gap-4">
        <%= f.submit "投稿", class: "btn btn-primary" %>
      </div>
    <% end %>
  </div>
</div>

<!-- ⚠️ 上記のform_withタグ内で実装を行なっても、完了ボタンを押した場合、patchリクエストのurlがtask_post_path(task)になってしまい、ルーティングエラーが発生する。
  そのため、form_withタグの外でボタン群を実装することで、完了ボタンを押した時、patchリクエストは正常に動作し、タスクのステータスをトグルすることができた。
  しかし、form_withタグ外で送信ボタンを実装する場合、Turboフレームの制御が難しくなるため、タスクステータスの完了ボタンは廃止し、タスク項目画面右上に実装する予定-->
<!-- <div class="flex justify-end gap-4"> %-->
  <%#= render "tasks/status_buttons", task: task %>
  <!-- <button type="submit" form="post_form_task.id" class="btn bg-custom-green hover:bg-custom-green/80 text-custom-white border-none">
    投稿
  </button> -->
<!-- </div> -->